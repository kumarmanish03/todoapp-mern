{
  "version": 3,
  "sources": [
    "TodoItem.js",
    "Form.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "TodoItem",
    "props",
    "styles",
    "textDecoration",
    "item",
    "completed",
    "date",
    "className",
    "type",
    "defaultChecked",
    "onChange",
    "toggleTodo",
    "id",
    "style",
    "text",
    "onClick",
    "e",
    "preventDefault",
    "delTodo",
    "class",
    "Form",
    "state",
    "onSubmit",
    "addTodo",
    "setState",
    "target",
    "value",
    "this",
    "required",
    "React",
    "Component",
    "url",
    "App",
    "todosData",
    "todo",
    "fetch",
    "method",
    "headers",
    "body",
    "JSON",
    "stringify",
    "then",
    "res",
    "json",
    "data",
    "map",
    "todos",
    "console",
    "log",
    "todoItems",
    "key",
    "ReactDOM",
    "render",
    "document",
    "getElementById"
  ],
  "mappings": "kLAsCeA,MApCf,SAAkBC,GAChB,IAKIC,EAAS,CACXC,eAAgBF,EAAMG,KAAKC,UAAY,eAAiB,QAOpDC,EAA0B,MAAnBL,EAAMG,KAAKE,KAAe,mBAAqBL,EAAMG,KAAKE,KAEvE,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,SACb,2BACEC,KAAK,WACLC,eAAgBR,EAAMG,KAAKC,UAC3BK,SAZW,WACjBT,EAAMU,WAAWV,EAAMG,KAAKQ,OAaxB,2BAAOC,MAAOX,GAASD,EAAMG,KAAKU,OAEpC,yBAAKP,UAAU,QAAQD,GACvB,6BACE,4BAAQS,QA3BE,SAACC,GACfA,EAAEC,iBACFhB,EAAMiB,QAAQjB,EAAMG,KAAKQ,KAyBKL,UAAU,OAClC,uBAAGY,MAAM,oBCYJC,E,4MAxCbC,MAAQ,CACNP,KAAM,I,EAGRQ,SAAW,SAACN,GACVA,EAAEC,iBACF,EAAKhB,MAAMsB,QAAQ,EAAKF,MAAMP,MAC9B,EAAKU,SAAS,CAAEV,KAAM,M,EAGxBJ,SAAW,SAACM,GACV,EAAKQ,SAAS,CACZV,KAAME,EAAES,OAAOC,S,uDAKjB,OACE,yBAAKnB,UAAU,aACb,yBAAKA,UAAU,UACb,yCAEF,yBAAKA,UAAU,aACb,0BAAMe,SAAUK,KAAKL,UACnB,2BACEd,KAAK,OACLkB,MAAOC,KAAKN,MAAMP,KAClBJ,SAAUiB,KAAKjB,SACfkB,UAAQ,IAEV,4BAAQrB,UAAU,aAChB,uBAAGY,MAAM,gC,GAhCJU,IAAMC,WCInBC,EAAM,gDAgFGC,E,4MA7EbX,MAAQ,CACNY,UAAW,I,EAgBbV,QAAU,SAACW,GACTC,MAAMJ,EAAK,CACTK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB1B,KAAMoB,MAGPO,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OACJ,EAAKpB,SAAS,CACZS,UAAWW,Q,EAKnB1B,QAAU,SAACN,GACTuB,MAAMJ,EAAMnB,EAAI,CACdwB,OAAQ,WAEPK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKpB,SAAS,CACZS,UAAWW,EAAKX,gB,EAKxBtB,WAAa,SAACC,GACZ,EAAKY,SAAS,CACZS,UAAW,EAAKZ,MAAMY,UAAUY,KAAI,SAACX,GAInC,OAHIA,EAAKtB,KAAOA,IACdsB,EAAK7B,WAAa6B,EAAK7B,WAElB6B,Q,kEAjDQ,IAAD,OAClBC,MAAMJ,GACHU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACK,GAAD,OACJ,EAAKtB,SACH,CACES,UAAWa,IAEb,kBAAMC,QAAQC,IAAI,qC,+BA8ChB,IAAD,OACDC,EAAYtB,KAAKN,MAAMY,UAAUY,KAAI,SAACX,GAAD,OACzC,kBAAC,EAAD,CACEgB,IAAKhB,EAAKtB,GACVR,KAAM8B,EACNhB,QAAS,EAAKA,QACdP,WAAY,EAAKA,gBAIrB,OACE,6BACE,kBAAC,EAAD,CAAMY,QAASI,KAAKJ,UACpB,yBAAKhB,UAAU,aAAa0C,Q,GAxElBpB,IAAMC,WCJxBqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U",
  "file": "static/js/main.7ce6bba8.chunk.js",
  "sourcesContent": [
    "import React from \"react\";\n\nfunction TodoItem(props) {\n  const delTodo = (e) => {\n    e.preventDefault();\n    props.delTodo(props.item.id);\n  };\n\n  let styles = {\n    textDecoration: props.item.completed ? \"line-through\" : \"none\",\n  };\n\n  const toggleTodo = () => {\n    props.toggleTodo(props.item.id);\n  };\n\n  const date = props.item.date == null ? \"10:58 17/09/2020\" : props.item.date;\n\n  return (\n    <div className=\"todo-item\">\n      <div className=\"todoi\">\n        <input\n          type=\"checkbox\"\n          defaultChecked={props.item.completed}\n          onChange={toggleTodo}\n        ></input>\n        <label style={styles}>{props.item.text}</label>\n      </div>\n      <div className=\"date\">{date}</div>\n      <div>\n        <button onClick={delTodo} className=\"btn\">\n          <i className=\"fa fa-trash\"></i>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoItem;\n",
    "import React from \"react\";\n\nclass Form extends React.Component {\n  state = {\n    text: \"\",\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.text);\n    this.setState({ text: \"\" });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      text: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"form-head\">\n        <div className=\"header\">\n          <h1>Todo App</h1>\n        </div>\n        <div className=\"todo-form\">\n          <form onSubmit={this.onSubmit}>\n            <input\n              type=\"text\"\n              value={this.state.text}\n              onChange={this.onChange}\n              required\n            ></input>\n            <button className=\"btnSubmit\">\n              <i className=\"fa fa-plus-square-o\"></i>\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n",
    "import React from \"react\";\n//import uuid from \"uuid\";\nimport TodoItem from \"./TodoItem\";\nimport Form from \"./Form\";\n//import todosData from \"../../todosData\";\n\nconst url = \"https://my-todos-app.herokuapp.com/api/todos/\";\n\nclass App extends React.Component {\n  state = {\n    todosData: [],\n  };\n\n  componentDidMount() {\n    fetch(url)\n      .then((res) => res.json())\n      .then((todos) =>\n        this.setState(\n          {\n            todosData: todos,\n          },\n          () => console.log(\"Todos fetched from API...\")\n        )\n      );\n  }\n\n  addTodo = (todo) => {\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        text: todo,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          todosData: data,\n        })\n      );\n  };\n\n  delTodo = (id) => {\n    fetch(url + id, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          todosData: data.todosData,\n        });\n      });\n  };\n\n  toggleTodo = (id) => {\n    this.setState({\n      todosData: this.state.todosData.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  render() {\n    const todoItems = this.state.todosData.map((todo) => (\n      <TodoItem\n        key={todo.id}\n        item={todo}\n        delTodo={this.delTodo}\n        toggleTodo={this.toggleTodo}\n      />\n    ));\n\n    return (\n      <div>\n        <Form addTodo={this.addTodo} />\n        <div className=\"todo-list\">{todoItems}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"
  ],
  "sourceRoot": ""
}
